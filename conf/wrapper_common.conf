#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE


#********************************************************************
# Wrapper Environment
#********************************************************************
set.MONKEY_VERSION=@MONKEY_VERSION@

# Working Directory - assuming wrapper binary in monkey_home/pkgs/{version}/bin
wrapper.working.dir=../../..

# Reload this config on each JVM launch (to get timestamped / env variables refreshed)
wrapper.restart.reload_configuration=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the locale which the Wrapper should use.  By default the system
#  locale is used.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the Wrapper's language resources.  If these are
#  missing, the Wrapper will default to the en_US locale.
wrapper.lang.folder=../lang

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
#wrapper.java.command=java

#  Specify a specific java binary:
#set.JAVA_HOME=/app/monkey/java/path
wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=pkgs/%MONKEY_VERSION%/conf
wrapper.java.classpath.2=pkgs/%MONKEY_VERSION%/web
wrapper.java.classpath.3=pkgs/%MONKEY_VERSION%/web/WEB-INF/lib/*.jar
wrapper.java.classpath.4=pkgs/%MONKEY_VERSION%/web/WEB-INF/classes

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=pkgs/%MONKEY_VERSION%/web/WEB-INF/lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters (JVM)
wrapper.java.additional.1=-server
wrapper.java.additional.2=-showversion
wrapper.java.additional.3=-Djava.awt.headless=true
wrapper.java.additional.4=-XX:MaxPermSize=128m
wrapper.java.additional.5=

# Java Additional Parameters (Garbage Collection Information - for GC Portal analysis)
wrapper.java.additional.6=-Xloggc:logs/%APP_NAME%_%MONKEY_ENV%_gc_%WRAPPER_TIME_YYYYMMDD_HHIISS%.log
wrapper.java.additional.7=-XX:+PrintGCDateStamps
wrapper.java.additional.8=-XX:+PrintGCTimeStamps
wrapper.java.additional.9=-XX:+PrintGCDetails
wrapper.java.additional.10=

# Java Additional Parameters (For Debugging)
#wrapper.java.additional.11=-Xdebug
#wrapper.java.additional.12=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
wrapper.java.additional.13=
wrapper.java.additional.14=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.15=-XX:+HeapDumpPath=logs

# Java Additional Parameters (For JMX)
wrapper.java.additional.16=-Dcom.sun.management.jmxremote=true
wrapper.java.additional.17=-Dcom.sun.management.jmxremote.port=%JMX_PORT%
wrapper.java.additional.18=-Dcom.sun.management.jmxremote.authenticate=%ENABLE_JMX_AUTH%
wrapper.java.additional.19=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.20=-Dcom.sun.management.jmxremote.password.file=/app/monkey/security/%MONKEY_ENV%.jmxremote.pwd
wrapper.java.additional.21=-Dcom.sun.management.jmxremote.access.file=/app/monkey/security/%MONKEY_ENV%.jmxremote.auth

# Java Additional Parameters (For GC Tuning)
wrapper.java.additional.22=-XX:MaxGCPauseMillis=10000
wrapper.java.additional.23=-XX:+DisableExplicitGC
wrapper.java.additional.24=
wrapper.java.additional.25=
wrapper.java.additional.26=
wrapper.java.additional.27=
wrapper.java.additional.28=

# Java Additional Parameters (Application Specific Parameters)
wrapper.java.additional.29=-DMONKEY_VERSION=%MONKEY_VERSION%
wrapper.java.additional.30=-Duser.timzone=UTC
wrapper.java.additional.31=-DMONKEY_ENV=%MONKEY_ENV%
wrapper.java.additional.32=-DMONKEY_LOG_DIR=logs
wrapper.java.additional.33=-DCOMPONENT_NAME=%APP_NAME%
wrapper.java.additional.34=-DMONKEY_SECRET_DIR=secret
wrapper.java.additional.35=
wrapper.java.additional.36=


# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=256

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=768

# Application parameters.  Add parameters as needed starting from 1
#wrapper.app.parameter.1=

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/%APP_NAME%_%MONKEY_ENV%_wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=25m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Kill JVM if the wrapper can't talk to it for longer than the timeout
wrapper.ping.timeout=120

# Kill JVM if the wrapper can't talk to it for longer than the timeout at start-up
wrapper.startup.timeout=120

# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=monkey %MONKEY_VERSION%

# Minimum amount of time that an application must remain running. Defaults to 300 seconds
wrapper.successful_invocation_time=300

# Maximum number of times that the Wrapper will attempt to restart the JVM if each attempted invocation exists abnormally or is restarted shortly after having being launched
wrapper.max_failed_invocation=1

# Disable detection of calls to System.exit(). If disabled, calls to System.exit() will be treated as if the JVM had crashed and the Service will be restarted
wrapper.disable_shutdown_book=TRUE

# we probably don't need this, as it's overriden in wrapper.sh
wrapper.pidfile=pkgs/%MONKEY_VERSION%/bin/%APP_NAME%_%MONKEY_ENV%.pid

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=60
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Simple match)
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1000=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1000=TRUE
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.attach_log=TRUE
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=%APP_NAME%_%MONKEY_ENV%

# Display name of the service
wrapper.displayname=%APP_LONG_NAME%_%MONKEY_ENV%

# Description of the service
wrapper.description=%APP_LONG_NAME%_%MONKEY_ENV% %MONKEY_VERSION%

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

